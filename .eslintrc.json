{
    "env": {
        "browser": true,
        "es6": true,
        "node": true
    },
    "extends": [
        "eslint:recommended",
        "plugin:react/recommended",
        "plugin:react-hooks/recommended",
        "plugin:prettier/recommended",
        // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
        "prettier/@typescript-eslint"
    ],
    "globals": {
        "Atomics": "readonly",
        "SharedArrayBuffer": "readonly"
    },
    "parser": "@typescript-eslint/parser",
    "parserOptions": {
        "project": "tsconfig.json",
        "sourceType": "module",
        "ecmaFeatures": {
            "jsx": true
        }
    },
    "plugins": [
        "@typescript-eslint/eslint-plugin",
        "prettier",
        "react",
        "react-hooks",
        "react-hooks"
    ],
    "settings": {
        "react": {
            "version": "latest"
        }
    },
    "rules": {
        "react/jsx-uses-react": "off",
        "react/react-in-jsx-scope": "off",
        "array-bracket-spacing": ["error", "never"],
        "no-redeclare": "off",
        "@typescript-eslint/no-redeclare": ["error"],
        "no-shadow": "off",
        "@typescript-eslint/no-shadow": ["error"],
        "prettier/prettier": "error",
        "react-hooks/rules-of-hooks": 0,
        "react-hooks/exhaustive-deps": "warn",
        "react/no-unescaped-entities": [
            "error",
            {
                "forbid": ["->", "}"]
            }
        ],
        "@typescript-eslint/adjacent-overload-signatures": "error",
        "@typescript-eslint/array-type": "error",
        "@typescript-eslint/await-thenable": "error",
        "@typescript-eslint/ban-types": "error", //?
        "@typescript-eslint/consistent-type-definitions": "error",
        "@typescript-eslint/naming-convention": [
            "error",
            {
                "selector": "default",
                "format": ["camelCase"]
            },
            {
                "selector": "variable",
                "leadingUnderscore": "allow",
                "format": ["camelCase", "UPPER_CASE", "PascalCase"]
            },
            {
                "selector": "parameter",
                "format": ["camelCase"],
                "leadingUnderscore": "allow"
            },
            {
                "selector": "memberLike",
                "format": ["PascalCase", "camelCase"],
                "leadingUnderscore": "allow"
            },
            {
                "selector": "typeLike",
                "format": ["PascalCase"]
            }
        ],
        "@typescript-eslint/member-delimiter-style": [
            "error",
            {
                "multiline": {
                    "delimiter": "none",
                    "requireLast": false
                },
                "singleline": {
                    "delimiter": "semi",
                    "requireLast": false
                }
            }
        ],
        "@typescript-eslint/no-empty-function": 0,
        "@typescript-eslint/no-empty-interface": 1,
        "@typescript-eslint/no-misused-new": "error",
        "@typescript-eslint/no-parameter-properties": "off",
        "@typescript-eslint/no-use-before-define": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/quotes": [
            "error",
            "single",
            {
                "allowTemplateLiterals": true
            }
        ],
        "@typescript-eslint/semi": ["error", "never"],
        "@typescript-eslint/type-annotation-spacing": "error",
        "comma-dangle": "off",
        "complexity": "off",
        "constructor-super": "error",
        "curly": ["error", "all"],
        "dot-notation": "error",
        "eol-last": ["error", "always"],
        "eqeqeq": ["error", "smart"],
        "id-blacklist": [
            "error",
            "any",
            "Number",
            "number",
            "String",
            "string",
            "Boolean",
            "boolean",
            "Undefined",
            "undefined"
        ],
        // "prefer-arrow/prefer-arrow-functions": [
        //     "warn",
        //     {
        //         "singleReturnOnly": true
        //     }
        // ],
        "max-len": [
            "error",
            {
                "code": 90,
                "ignoreComments": true,
                "ignoreTemplateLiterals": true
            }
        ],
        "new-parens": "error",
        "no-eval": "error",
        "no-fallthrough": "off",
        "no-multiple-empty-lines": "error",
        "no-trailing-spaces": "error",
        "no-var": "error",
        "prefer-const": "error",
        "quote-props": ["error", "as-needed"],
        "space-before-function-paren": [
            "error",
            {
                "anonymous": "never",
                "asyncArrow": "always",
                "named": "never"
            }
        ],
        "spaced-comment": "error",
        "use-isnan": "error",
        "valid-typeof": "off",
        "react/prop-types": 0,
        "react/display-name": [0]
    },
    "overrides": [
        {
            "files": ["**/*.ts", "**/*.tsx"],
            "rules": {
                "no-unused-vars": ["off"],
                "no-undef": ["off"]
            }
        }
    ]
}
